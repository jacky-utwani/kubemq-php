<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kubemq.proto

namespace Kubemq;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>kubemq.StreamQueueMessagesResponse</code>
 */
class StreamQueueMessagesResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string RequestID = 1;</code>
     */
    protected $RequestID = '';
    /**
     * Generated from protobuf field <code>.kubemq.StreamRequestType StreamRequestTypeData = 2;</code>
     */
    protected $StreamRequestTypeData = 0;
    /**
     * Generated from protobuf field <code>.kubemq.QueueMessage Message = 3;</code>
     */
    protected $Message = null;
    /**
     * Generated from protobuf field <code>bool IsError = 4;</code>
     */
    protected $IsError = false;
    /**
     * Generated from protobuf field <code>string Error = 5;</code>
     */
    protected $Error = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $RequestID
     *     @type int $StreamRequestTypeData
     *     @type \Kubemq\QueueMessage $Message
     *     @type bool $IsError
     *     @type string $Error
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kubemq::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string RequestID = 1;</code>
     * @return string
     */
    public function getRequestID()
    {
        return $this->RequestID;
    }

    /**
     * Generated from protobuf field <code>string RequestID = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestID($var)
    {
        GPBUtil::checkString($var, True);
        $this->RequestID = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.kubemq.StreamRequestType StreamRequestTypeData = 2;</code>
     * @return int
     */
    public function getStreamRequestTypeData()
    {
        return $this->StreamRequestTypeData;
    }

    /**
     * Generated from protobuf field <code>.kubemq.StreamRequestType StreamRequestTypeData = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStreamRequestTypeData($var)
    {
        GPBUtil::checkEnum($var, \Kubemq\StreamRequestType::class);
        $this->StreamRequestTypeData = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.kubemq.QueueMessage Message = 3;</code>
     * @return \Kubemq\QueueMessage
     */
    public function getMessage()
    {
        return isset($this->Message) ? $this->Message : null;
    }

    public function hasMessage()
    {
        return isset($this->Message);
    }

    public function clearMessage()
    {
        unset($this->Message);
    }

    /**
     * Generated from protobuf field <code>.kubemq.QueueMessage Message = 3;</code>
     * @param \Kubemq\QueueMessage $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkMessage($var, \Kubemq\QueueMessage::class);
        $this->Message = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool IsError = 4;</code>
     * @return bool
     */
    public function getIsError()
    {
        return $this->IsError;
    }

    /**
     * Generated from protobuf field <code>bool IsError = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsError($var)
    {
        GPBUtil::checkBool($var);
        $this->IsError = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string Error = 5;</code>
     * @return string
     */
    public function getError()
    {
        return $this->Error;
    }

    /**
     * Generated from protobuf field <code>string Error = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkString($var, True);
        $this->Error = $var;

        return $this;
    }

}

